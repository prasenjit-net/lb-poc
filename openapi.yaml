openapi: 3.0.0
servers:
  - url: 'http://localhost:3000'
    description: Local Development Server
    variables: {}
info:
  description: This is an Open API Loopback POC.
  version: 1.0.0
  title: Loopback POC API
  termsOfService: 'http://localhost:3000/tos.html'
  contact:
    email: prasenjit@prasenjit.net
    name: Prasenjit Purohit
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: read
    description: A Read Operation
  - name: write
    description: A Write Operation
  - name: security
    description: A Security related API
paths:
  /user/me:
    get:
      summary: Get Current User
      description: Return the current user who is logged in
      parameters: []
      operationId: get_me
      responses:
        '200':
          description: Success Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDataResponse'
      tags:
        - read
  /login:
    post:
      summary: Login
      description: Log in with user credentials
      parameters: []
      operationId: login
      responses:
        '200':
          description: Login Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDataResponse'
        '401':
          description: Login Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      tags:
        - security
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        description: Login request body
      security: []
    delete:
      summary: Logout
      description: Logout from the system
      parameters: []
      operationId: logout
      responses:
        '200':
          description: Logout Success
      tags:
        - security
      security: []
  /user:
    post:
      summary: Create User
      description: 'Create new user, later can be used for authentication'
      parameters: []
      operationId: create_user
      responses:
        '200':
          description: Success Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDataResponse'
      tags:
        - security
        - write
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
        description: Create a User Request
        required: true
      security: []
    get:
      summary: List Users
      description: List all available users
      operationId: list_users
      responses:
        '200':
          description: User list success response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDataResponse'
      tags:
        - read
components:
  schemas:
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    UserDataResponse:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
    UserCreate:
      required:
        - username
        - email
        - password
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
  securitySchemes:
    token_security:
      type: apiKey
      name: api_key
      in: header
  links: {}
  callbacks: {}
security: []
